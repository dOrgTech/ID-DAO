{
  "contractName": "HumanContract",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "isHuman",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"isHuman\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Luis Dominguez <ld@luis.sh>, Jordan Ellis <jelli@dorg.tech>\",\"details\":\"An abstract contract which can be extended by any contract which wishes to inherit human-related functionality.\",\"methods\":{\"isHuman(address)\":{\"details\":\"An abstract function which must be implemented, which determines whether a passed address is human or not.\",\"params\":{\"id\":\"address Address to check\"},\"return\":\"bool Human status of address\"}},\"title\":\"HumanContract\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jelli/Dev/Repos/dOrg/ID-DAO/dao/contracts/human/HumanContract.sol\":\"HumanContract\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jelli/Dev/Repos/dOrg/ID-DAO/dao/contracts/human/HumanContract.sol\":{\"keccak256\":\"0xa8e2523fa7267b89e39fa3d8e3a9942d4dfa6cd1012db9b930ee7be4a71d33fd\",\"urls\":[\"bzz-raw://adf89d8953e3e5b21fabc0a2a92e2d9d6f98f562812010e1ee973a107c608f29\",\"dweb:/ipfs/QmWr6BT6Zmw9ap2GJXWMsGQL5SUw2CncfWRNV8NJucUbEv\"]},\"/home/jelli/Dev/Repos/dOrg/ID-DAO/dao/contracts/human/IVerifyHuman.sol\":{\"keccak256\":\"0xc31c1032355bfb842930c39a68f4352fa36f790b1ec7130fccf0f541bb43e783\",\"urls\":[\"bzz-raw://af5fbffc160c35cbd03296609766b70a7c51c757715a795322ed0fbbe4d849cb\",\"dweb:/ipfs/QmNdnPuJXHv8fEiaY5rU1whtJcrN8FnwCbZEDgqZgUNEWT\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./IVerifyHuman.sol\";\n\n/**\n * @title HumanContract\n * @author Luis Dominguez <ld@luis.sh>, Jordan Ellis <jelli@dorg.tech>\n *\n * @dev An abstract contract which can be extended by any contract\n * which wishes to inherit human-related functionality.\n */\ncontract HumanContract is IVerifyHuman {\n    /**\n     * @dev Throws if not called by a human.\n     */\n    modifier onlyHuman() {\n        require(isHuman(msg.sender), \"Sender is not a human\");\n        _;\n    }\n\n    /**\n     * @dev An abstract function which must be implemented, which determines\n     * whether a passed address is human or not.\n     *\n     * @param id address Address to check\n     * @return bool Human status of address\n     */\n    function isHuman(address id) public view returns (bool);\n}\n",
  "sourcePath": "/home/jelli/Dev/Repos/dOrg/ID-DAO/dao/contracts/human/HumanContract.sol",
  "ast": {
    "absolutePath": "/home/jelli/Dev/Repos/dOrg/ID-DAO/dao/contracts/human/HumanContract.sol",
    "exportedSymbols": {
      "HumanContract": [
        259
      ]
    },
    "id": 260,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 236,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/jelli/Dev/Repos/dOrg/ID-DAO/dao/contracts/human/IVerifyHuman.sol",
        "file": "./IVerifyHuman.sol",
        "id": 237,
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 270,
        "src": "25:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 238,
              "name": "IVerifyHuman",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 269,
              "src": "310:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVerifyHuman_$269",
                "typeString": "contract IVerifyHuman"
              }
            },
            "id": 239,
            "nodeType": "InheritanceSpecifier",
            "src": "310:12:3"
          }
        ],
        "contractDependencies": [
          269
        ],
        "contractKind": "contract",
        "documentation": "@title HumanContract\n@author Luis Dominguez <ld@luis.sh>, Jordan Ellis <jelli@dorg.tech>\n * @dev An abstract contract which can be extended by any contract\nwhich wishes to inherit human-related functionality.",
        "fullyImplemented": false,
        "id": 259,
        "linearizedBaseContracts": [
          259,
          269
        ],
        "name": "HumanContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "411:81:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 243,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2672,
                              "src": "437:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "437:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 242,
                          "name": "isHuman",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "429:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "429:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206973206e6f7420612068756d616e",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "450:23:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_900f2950fe64f7e68bb750d0bfeebd3ccb30fad69b1dbbb25b5242a377be6643",
                          "typeString": "literal_string \"Sender is not a human\""
                        },
                        "value": "Sender is not a human"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_900f2950fe64f7e68bb750d0bfeebd3ccb30fad69b1dbbb25b5242a377be6643",
                          "typeString": "literal_string \"Sender is not a human\""
                        }
                      ],
                      "id": 241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2675,
                        2676
                      ],
                      "referencedDeclaration": 2676,
                      "src": "421:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "421:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "421:53:3"
                },
                {
                  "id": 249,
                  "nodeType": "PlaceholderStatement",
                  "src": "484:1:3"
                }
              ]
            },
            "documentation": "@dev Throws if not called by a human.",
            "id": 251,
            "name": "onlyHuman",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:2:3"
            },
            "src": "390:102:3",
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev An abstract function which must be implemented, which determines\nwhether a passed address is human or not.\n     * @param id address Address to check\n@return bool Human status of address",
            "id": 258,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isHuman",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "750:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "749:12:3"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "783:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "783:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "782:6:3"
            },
            "scope": 259,
            "src": "733:56:3",
            "stateMutability": "view",
            "superFunction": 268,
            "visibility": "public"
          }
        ],
        "scope": 260,
        "src": "284:507:3"
      }
    ],
    "src": "0:792:3"
  },
  "legacyAST": {
    "absolutePath": "/home/jelli/Dev/Repos/dOrg/ID-DAO/dao/contracts/human/HumanContract.sol",
    "exportedSymbols": {
      "HumanContract": [
        259
      ]
    },
    "id": 260,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 236,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/jelli/Dev/Repos/dOrg/ID-DAO/dao/contracts/human/IVerifyHuman.sol",
        "file": "./IVerifyHuman.sol",
        "id": 237,
        "nodeType": "ImportDirective",
        "scope": 260,
        "sourceUnit": 270,
        "src": "25:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 238,
              "name": "IVerifyHuman",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 269,
              "src": "310:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVerifyHuman_$269",
                "typeString": "contract IVerifyHuman"
              }
            },
            "id": 239,
            "nodeType": "InheritanceSpecifier",
            "src": "310:12:3"
          }
        ],
        "contractDependencies": [
          269
        ],
        "contractKind": "contract",
        "documentation": "@title HumanContract\n@author Luis Dominguez <ld@luis.sh>, Jordan Ellis <jelli@dorg.tech>\n * @dev An abstract contract which can be extended by any contract\nwhich wishes to inherit human-related functionality.",
        "fullyImplemented": false,
        "id": 259,
        "linearizedBaseContracts": [
          259,
          269
        ],
        "name": "HumanContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "411:81:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 243,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2672,
                              "src": "437:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "437:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 242,
                          "name": "isHuman",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "429:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "429:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206973206e6f7420612068756d616e",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "450:23:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_900f2950fe64f7e68bb750d0bfeebd3ccb30fad69b1dbbb25b5242a377be6643",
                          "typeString": "literal_string \"Sender is not a human\""
                        },
                        "value": "Sender is not a human"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_900f2950fe64f7e68bb750d0bfeebd3ccb30fad69b1dbbb25b5242a377be6643",
                          "typeString": "literal_string \"Sender is not a human\""
                        }
                      ],
                      "id": 241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2675,
                        2676
                      ],
                      "referencedDeclaration": 2676,
                      "src": "421:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "421:53:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "421:53:3"
                },
                {
                  "id": 249,
                  "nodeType": "PlaceholderStatement",
                  "src": "484:1:3"
                }
              ]
            },
            "documentation": "@dev Throws if not called by a human.",
            "id": 251,
            "name": "onlyHuman",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:2:3"
            },
            "src": "390:102:3",
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev An abstract function which must be implemented, which determines\nwhether a passed address is human or not.\n     * @param id address Address to check\n@return bool Human status of address",
            "id": 258,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isHuman",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "750:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "749:12:3"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "783:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "783:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "782:6:3"
            },
            "scope": 259,
            "src": "733:56:3",
            "stateMutability": "view",
            "superFunction": 268,
            "visibility": "public"
          }
        ],
        "scope": 260,
        "src": "284:507:3"
      }
    ],
    "src": "0:792:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-26T23:59:57.336Z",
  "devdoc": {
    "author": "Luis Dominguez <ld@luis.sh>, Jordan Ellis <jelli@dorg.tech>",
    "details": "An abstract contract which can be extended by any contract which wishes to inherit human-related functionality.",
    "methods": {
      "isHuman(address)": {
        "details": "An abstract function which must be implemented, which determines whether a passed address is human or not.",
        "params": {
          "id": "address Address to check"
        },
        "return": "bool Human status of address"
      }
    },
    "title": "HumanContract"
  },
  "userdoc": {
    "methods": {}
  }
}